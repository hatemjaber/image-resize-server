version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: image-resize-server
    container_name: app
    hostname: app
    volumes:
      - node_modules:/app/node_modules
      - .:/app
    working_dir: /app
    ports:
      - "0.0.0.0:5555:5555"
    env_file:
      - .env
    depends_on:
      - minio
  minio:
    image: minio/minio
    container_name: minio
    hostname: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${BUCKET_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${BUCKET_ACCESS_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  createbuckets:
    image: minio/mc
    container_name: createbuckets
    restart: no
    depends_on:
      - minio
    profiles: ["setup"]
    environment:
      - MINIO_ROOT_USER=${BUCKET_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${BUCKET_ACCESS_KEY}
    entrypoint: >
      /bin/sh -c "
      until /usr/bin/mc config host add myminio http://minio:9000 ${BUCKET_ACCESS_KEY_ID} ${BUCKET_ACCESS_KEY}; do
        echo 'Waiting for MinIO to be ready...'
        sleep 1
      done;
      if ! /usr/bin/mc ls myminio/${BUCKET_NAME} > /dev/null 2>&1; then
        echo 'Bucket does not exist, creating it...'
        /usr/bin/mc mb myminio/${BUCKET_NAME};
        /usr/bin/mc anonymous set download myminio/${BUCKET_NAME};
      else
        echo 'Bucket already exists'
      fi;
      exit 0;
      "

volumes:
  minio_data:
  node_modules:
